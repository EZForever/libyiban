<!DOCTYPE html>
<html>
<head>
</head>
<body>
    <div id="score-graph"><div style="text-align: center;">Loading...</div></div>
    <script src="{{ ctfd_base }}/themes/core/static/js/vendor/jquery.min.js"></script>
    <script src="{{ ctfd_base }}/themes/core/static/js/vendor/plotly.min.js"></script>
    <script src="{{ ctfd_base }}/themes/core/static/js/vendor/moment.min.js"></script>
    <script src="{{ ctfd_base }}/themes/core/static/js/vendor/moment-timezone-with-data.min.js"></script>
    <script src="{{ ctfd_base }}/themes/core/static/js/utils.js"></script>
    <script>
function scoregraph () {
    $.get('{{ url_for('route_api_scoreboard') }}', function( response ) {
        var places = response.data;

        if (Object.keys(places).length === 0 ){
            $('#score-graph').html(
                '<div style="text-align: center;">No solves yet</div>'
            );
            return;
        }

        var teams = Object.keys(places);
        var traces = [];
        for(var i = 0; i < teams.length; i++){
            var team_score = [];
            var times = [];
            for(var j = 0; j < places[teams[i]]['solves'].length; j++){
                team_score.push(places[teams[i]]['solves'][j].value);
                var date = moment(places[teams[i]]['solves'][j].date);
                times.push(date.toDate());
            }
            team_score = cumulativesum(team_score);
            var trace = {
                x: times,
                y: team_score,
                mode: 'lines+markers',
                name: places[teams[i]]['name'],
                marker: {
                    color: colorhash(places[teams[i]]['name'] + places[teams[i]]['id']),
                },
                line: {
                    color: colorhash(places[teams[i]]['name'] + places[teams[i]]['id']),
                }
            };
            traces.push(trace);
        }

        traces.sort(function(a, b) {
            var scorediff = b['y'][b['y'].length - 1] - a['y'][a['y'].length - 1];
            if(!scorediff) {
                return a['x'][a['x'].length - 1] - b['x'][b['x'].length - 1];
            }
            return scorediff;
        });

        var layout = {
            //title: 'Top 10 Teams',
            paper_bgcolor: 'rgba(0,0,0,0)',
            plot_bgcolor: 'rgba(0,0,0,0)',
            hovermode: 'closest',
            xaxis: {
                showgrid: false,
                showspikes: true,
            },
            yaxis: {
                showgrid: false,
                showspikes: true,
            },
            legend: {
                "orientation": "h"
            },
            margin: { // Remove title margin
                l: 50,
                r: 50,
                b: 50,
                t: 50,
                pad: 4
            }
        };

        $('#score-graph').empty();
        document.getElementById('score-graph').fn = 'CTFd_scoreboard_' + (new Date).toISOString().slice(0,19);
        Plotly.newPlot('score-graph', traces, layout, {
            // displayModeBar: false,
            displaylogo: false
        });
    });
}

setInterval(scoregraph, 5 * 60 * 1000);
scoregraph();

window.onresize = function () {
    Plotly.Plots.resize(document.getElementById('score-graph'));
};
    </script>
<body>
<html>
